from sqlmodel import SQLModel, Field
from datetime import datetime
from uuid import UUID, uuid4
from typing import Optional

# --- Base Schema ---
# Contains fields that are common across multiple user-related schemas.
class UserBase(SQLModel):
    email: EmailStr
    is_active: bool = True
    google_id: Optional[str] = None

# --- Schemas for API Operations ---
class UserCreate(UserBase):
    """Schema used when a new user registers. Includes the plaintext password."""
    password: str = Field(..., min_length=8)

class UserPublic(UserBase):
    """Schema for user data that is safe to return to the client/frontend."""
    id: UUID
    created_at: datetime

# --- Schema for Database Representation ---
class UserInDB(UserBase):
    """
    This represents the complete user object as stored in the database,
    including the hashed password.
    """
    id: UUID = Field(default_factory=uuid4)
    hashed_password: str
    created_at: datetime = Field(default_factory=datetime.utcnow)